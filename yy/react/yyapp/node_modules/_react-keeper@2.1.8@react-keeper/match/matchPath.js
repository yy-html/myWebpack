'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = matchPath;

var _compilePattern = require('./compilePattern');

var _compilePattern2 = _interopRequireDefault(_compilePattern);

var _Util = require('../utils/Util');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * match path with pattern
 * @module matchPath
 *   1. check if the path matches the pattern
 *   2. retract param values by param names from the path
 *
 * @param {string} path         - the path of next location
 * @param {string} pattern      - the pattern defined by property 'path' on the component 'Route'
 *
 * @return {object} {
 *     match: {boolean}         - match result
 *     params: {object}         - param names & param values of the path
 *   }
 */
function matchPath(path, pattern) {
  if (!patterns[pattern]) {
    patterns[pattern] = (0, _compilePattern2.default)(pattern);
  }
  path = (0, _Util.resetPath)(path);

  var patternCompile = patterns[pattern];
  var regular = new RegExp(patternCompile.regular, 'g');
  var match = regular.exec(path);
  if (!match) {
    return { match: false };
  }

  var matchers = match.splice(1);
  var params = {};
  if (patternCompile.params) {
    for (var index in patternCompile.params) {
      params[patternCompile.params[index]] = matchers.length > index ? matchers[index] : null;
    }
  }
  return {
    pattern: pattern,
    match: true,
    params: params,
    matchStr: match[0],
    lastIndex: regular.lastIndex
  };
}

/**
 * @property {object} patterns  - record the patterns(with param names) of the paths
 */
var patterns = {};