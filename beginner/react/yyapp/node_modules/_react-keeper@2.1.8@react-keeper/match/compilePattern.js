'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = compilePattern;
/**
 * compile path pattern
 * @module compilePattern
 *   1. compile path pattern to regular string
 *   2. extrac param names from path pattern
 *
 * @param {string} pattern - the pattern defined by property 'path' on the component 'Route'
 */
function compilePattern(pattern) {

  // '>' means 'end'
  var endForcedCheck = false;
  if (pattern.indexOf('>') === pattern.length - 1) {
    endForcedCheck = true;
    pattern = pattern.substring(0, pattern.length - 1);
  }
  pattern = pattern.replace(/\$/g, '\\$');

  var regular = [];
  var params = {};
  var _ulrPart = '([0-9a-zA-Z-_$%]+)';
  var _rule = new RegExp('\\(\\/:' + _ulrPart + '\\)|:' + _ulrPart + '|(\\*\\*)|(\\*)', 'g');

  var _match = void 0;
  var _lastIndex = 0;
  var _index = 0;

  while (_match = _rule.exec(pattern)) {

    regular.push(pattern.substring(_lastIndex, _match.index));

    if (_match[0] === '**') {

      regular.push('(.*)');
    } else if (_match[0] === '*') {

      regular.push('([^\/]+)');
    } else if (_match[0].indexOf('(/:') === 0) {

      regular.push('(?:/' + _ulrPart + ')?');
      params[_index] = _match[1];
    } else if (_match[0].indexOf(':') === 0) {

      regular.push('' + _ulrPart);
      params[_index] = _match[2];
    }

    _lastIndex = _rule.lastIndex;
    _index++;
  }

  if (_lastIndex < pattern.length) {
    regular.push(pattern.substring(_lastIndex, pattern.length));
  }

  if (endForcedCheck) {
    regular.push('$');
  } else if (regular.length !== 1 || regular[0] !== '/') {
    /** followed by `/` or none */
    regular.push('(?=/|$)');
  }

  return {
    regular: regular.join(''),
    params: params,
    pattern: pattern
  };
}