'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Link2 = require('./Link');

var _Link3 = _interopRequireDefault(_Link2);

var _CacheOfLinkControl = require('./utils/CacheOfLinkControl');

var _CacheOfLinkControl2 = _interopRequireDefault(_CacheOfLinkControl);

var _HistoryControl = require('./HistoryControl');

var _HistoryControl2 = _interopRequireDefault(_HistoryControl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CacheLink = function (_Link) {
  _inherits(CacheLink, _Link);

  function CacheLink() {
    _classCallCheck(this, CacheLink);

    return _possibleConstructorReturn(this, (CacheLink.__proto__ || Object.getPrototypeOf(CacheLink)).apply(this, arguments));
  }

  _createClass(CacheLink, [{
    key: 'render',
    value: function render() {
      return _get(CacheLink.prototype.__proto__ || Object.getPrototypeOf(CacheLink.prototype), 'render', this).call(this);
    }
  }]);

  return CacheLink;
}(_Link3.default);

exports.default = CacheLink;


CacheLink.prototype.go = function (to, state) {
  var route = void 0;
  if (this.context.routes && this.context.routes.length) {
    route = this.context.routes[this.context.routes.length - 1];
  }
  _CacheOfLinkControl2.default.add(this.context.parent || this.context.router, to);
  _HistoryControl2.default.go(to, state);
};

CacheLink.contextTypes = {
  history: _propTypes2.default.object,
  parent: _propTypes2.default.any,
  router: _propTypes2.default.any
};