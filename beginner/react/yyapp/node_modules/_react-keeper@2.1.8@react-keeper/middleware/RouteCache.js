'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _Logger = require('../utils/Logger');

var _Logger2 = _interopRequireDefault(_Logger);

var _CacheOfTagControl = require('../utils/CacheOfTagControl');

var _CacheOfTagControl2 = _interopRequireDefault(_CacheOfTagControl);

var _CacheOfLinkControl = require('../utils/CacheOfLinkControl');

var _CacheOfLinkControl2 = _interopRequireDefault(_CacheOfLinkControl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

exports.default = function (RouteBase) {
  return function (_RouteBase) {
    _inherits(_class, _RouteBase);

    function _class() {
      _classCallCheck(this, _class);

      return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
    }

    _createClass(_class, [{
      key: 'isCached',


      /** check 'cache' tag and link */
      value: function isCached() {
        if (_CacheOfTagControl2.default.isCached(this)) {
          return 1;
        }
        if (_CacheOfLinkControl2.default.isCached(this)) {
          return 2;
        }
        return 0;
      }

      /** check `cache` tag, used after route is mounted succeed */

    }, {
      key: 'checkCacheTag',
      value: function checkCacheTag(remove) {

        var cache = void 0;
        if (remove) {
          cache = null;
        } else {
          cache = typeof this.cacheMark !== 'undefined' ? this.cacheMark : this.props.cache;
          if (!cache) {
            cache = null;
          }
          if (cache === true) {
            cache = 'root';
          }
          if (cache !== 'parent' && cache !== 'root') {
            cache = null;
          }
        }
        _CacheOfTagControl2.default.put(this, cache);
      }
    }, {
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        _get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'componentWillReceiveProps', this) && _get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'componentWillReceiveProps', this).call(this, nextProps);
        if (nextProps.cache !== this.props.cache) {
          this.cacheMark = nextProps.cache;
          this.checkCacheTag(false);
          this.routeCheckEntry();
        }
      }

      /** check cache, link cache & tag cache */

    }, {
      key: 'setToUnmount',
      value: function setToUnmount(matchData, options) {
        var cache = this.isCached();
        if (cache) {
          this.checkPath(this.cacheLocation);
          if (this.state.mountBy !== cache && this.state.status === 1) {
            _get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'setToUnmount', this).call(this, matchData, options);
            this.updateMountStatus({ status: 1, mountBy: cache, matchData: this.state.cacheMatch });
          }
          return;
        }
        _get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'setToUnmount', this).call(this, matchData, options);
      }

      /** check cache tag after update status  */

    }, {
      key: 'updateMountStatus',
      value: function updateMountStatus(_ref) {
        var status = _ref.status,
            mountBy = _ref.mountBy,
            matchData = _ref.matchData;

        _get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'updateMountStatus', this).call(this, { status: status, mountBy: mountBy, matchData: matchData });
        this.checkCacheTag(status === 0);
      }

      /** hide or show it's component after it mounted */

    }, {
      key: 'hideOrShow',
      value: function hideOrShow() {
        if (!this.state.status) return;
        var display = this.state.mountBy === 0 ? this.initDisplay || null : 'none';
        var dom = void 0;
        try {
          dom = this.refs.component ? _reactDom2.default.findDOMNode(this.refs.component) : null;
        } catch (error) {
          _Logger2.default.warn('Cannot find dom.');
          return;
        }
        if (!dom) {
          _Logger2.default.warn('Cannot find dom.');
          return;
        }

        // change display
        if (dom) {
          if (typeof this.initDisplay === 'undefined') {
            this.initDisplay = dom ? dom.style.display || null : null;
          }
          dom.style.display = display;
        }
      }
    }, {
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        _get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'componentWillUnmount', this) && _get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'componentWillUnmount', this).call(this);
        this.checkCacheTag(true);
      }
    }, {
      key: 'componentDidUpdate',
      value: function componentDidUpdate() {
        this.hideOrShow();
        _get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'componentDidUpdate', this) && _get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'componentDidUpdate', this).call(this);
      }
    }]);

    return _class;
  }(RouteBase);
};